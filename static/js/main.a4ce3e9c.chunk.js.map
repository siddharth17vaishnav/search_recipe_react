{"version":3,"sources":["Recipe.js","App.js","reportWebVitals.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","className","style","recipe","map","ingredient","text","src","alt","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","onSubmit","e","preventDefault","type","value","onChange","target","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+PAkBeA,EAdA,SAAC,GAAwC,IAAvCC,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,SAASC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,YAClC,OACJ,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,6BAAKN,IACL,6BACKG,EAAYI,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAExB,4BAAIR,IACJ,qBAAKG,UAAWC,IAAMH,MAAOQ,IAAKR,EAAOS,IAAI,SCwClCC,G,MAjDH,WAEV,IAFgB,EAIYC,mBAAS,IAJrB,mBAITC,EAJS,KAIDC,EAJC,OAKUF,mBAAS,IALnB,mBAKTG,EALS,KAKFC,EALE,OAMOJ,mBAAS,SANhB,mBAMTK,EANS,KAMHC,EANG,KAShBC,qBAAU,WACVC,MACA,CAACH,IAED,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZf,WAYe,oBAXf,qCAUI,cACXM,EADW,gBAECA,EAASC,OAFV,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAgBhB,OACK,sBAAKvB,UAAU,MAAf,UACE,uBAAMwB,SAPK,SAAAC,GAChBA,EAAEC,iBACFX,EAASH,GACTC,EAAU,KAIsBb,UAAU,cAArC,UACE,uBAAOA,UAAW,aAAa2B,KAAK,OAAOC,MAAOhB,EAAQiB,SAb9C,SAAAJ,GACnBZ,EAAUY,EAAEK,OAAOF,UAaZ,wBAAS5B,UAAU,gBAAgB2B,KAAK,SAAxC,uBAEF,qBAAK3B,UAAU,SAAf,SACCU,EAAQP,KAAI,SAAAD,GAAM,OACjB,cAAC,EAAD,CAECN,MAAOM,EAAOA,OAAO6B,MACrBlC,SAAUK,EAAOA,OAAOL,SACxBC,MAAOI,EAAOA,OAAOJ,MACrBC,YAAeG,EAAOA,OAAOH,aAJzBG,EAAOA,OAAO6B,iBC9BfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,yB","file":"static/js/main.a4ce3e9c.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css';\r\nimport  \"./recipe.module.css\";\r\n\r\nconst Recipe = ({title,calories,image,ingredients}) => {\r\n    return(\r\n<div className={style.recipe}>\r\n    <h1>{title}</h1>\r\n    <ol>\r\n        {ingredients.map(ingredient =>(\r\n            <li>{ingredient.text}</li>))}\r\n    </ol>\r\n    <p>{calories}</p>\r\n    <img className={style.image} src={image} alt=\"\"/>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default Recipe;","import React,{useEffect,useState} from 'react';\nimport Recipe from './Recipe';\nimport './App.css';\n\nconst App = () => {\n\n  const APP_ID = \"221222af\";\n  const APP_KEY =\"ce415398289a81b0f46e53a8a6c3b91d\";\n  const [recipes,setRecipes] =useState([]);\n  const [search,setSearch] =useState('');\n  const [query,setQuery]=useState('salad');\n\n   \n  useEffect(() =>{\n  getRecipes();\n},[query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data =await response.json();\n    setRecipes(data.hits);\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n    \n  }\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch('');\n  }\n  return(\n       <div className=\"App\">\n         <form onSubmit={getSearch} className=\"search-form\">\n           <input className =\"search-bar\" type=\"text\" value={search} onChange={updateSearch}/>\n           <button  className=\"search-button\" type=\"submit\">Search</button>\n         </form>\n         <div className=\"recipe\">\n         {recipes.map(recipe => (\n           <Recipe\n           key={recipe.recipe.label}\n            title={recipe.recipe.label}\n            calories={recipe.recipe.calories}\n            image={recipe.recipe.image}\n            ingredients = {recipe.recipe.ingredients}\n            />\n         ))}\n         </div>\n       </div>\n  );\n         }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1SRqg\",\"image\":\"recipe_image__1I7dC\"};"],"sourceRoot":""}